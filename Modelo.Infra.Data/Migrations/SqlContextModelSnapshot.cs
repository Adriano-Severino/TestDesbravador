// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelo.Infra.Data.Context;

#nullable disable

namespace Modelo.Infra.Data.Migrations
{
    [DbContext(typeof(SqlContext))]
    partial class SqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Modelo.Domain.Entities.Employees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Password");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("Role");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("SobreNome");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e166e331-dd18-4a0f-a3c1-2f6fddd7f317"),
                            Email = "admin@admin.com",
                            Nome = "Adminsitrador",
                            Password = "123",
                            Role = 1,
                            Sobrenome = "adiminsitrador"
                        });
                });

            modelBuilder.Entity("Modelo.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("DataFinal");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("DescricaoProjeto");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NomeProjeto");

                    b.Property<int>("ProjectRiskEnum")
                        .HasColumnType("int")
                        .HasColumnName("RiscoProjeto");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("DataInicio");

                    b.Property<int>("StatusProjectEnum")
                        .HasColumnType("int")
                        .HasColumnName("StatusProjeto");

                    b.HasKey("Id");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("Modelo.Domain.Entities.Employees", b =>
                {
                    b.HasOne("Modelo.Domain.Entities.Project", "Project")
                        .WithMany("Employees")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Modelo.Domain.Entities.Project", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
